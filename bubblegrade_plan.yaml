bubblegrade_action_plan:
  version: "0.1"
  goal: "Migrar a arquitectura simplificada (Opción A: monolito Python) sin perder funcionalidad"
  phases:
    - name: 1_evaluacion_estado_actual
      description: "Auditar el repositorio y la infraestructura existente"
      tasks:
        - id: 1.1
          title: "Inventario de directorios y servicios"
          command: "tree -L 2 && docker compose ls"
          deliverable: "lista_servicios_actual.md"
        - id: 1.2
          title: "Revisión de performance actual"
          command: |
            docker stats --no-stream > perf_baseline.txt
            time curl -F file=@demo.jpg http://localhost:8080/api/scans
          deliverable: "perf_baseline.txt"
        - id: 1.3
          title: "Verificación de errores en logs"
          command: "docker compose logs api > api_logs.txt"
          deliverable: "api_logs.txt"

    - name: 2_desmantelar_microservicios
      description: "Eliminar omr-service y ocr-service del compose y del CI"
      tasks:
        - id: 2.1
          title: "Borrar carpetas de servicios Go y Node"
          command: "git rm -r services/omr services/ocr"
        - id: 2.2
          title: "Limpiar compose.micro.yml"
          command: |
            yq eval 'del(.services.omr) | del(.services.ocr) | del(.services.frontend)' compose.micro.yml \
            > docker-compose.yml
        - id: 2.3
          title: "Actualizar CI (GitHub Actions)"
          command: |
            sed -i '/omr\\|ocr/d' .github/workflows/ci.yml

    - name: 3_refactor_fastapi_monolito
      description: "Unificar OMR y OCR en el contenedor API"
      tasks:
        - id: 3.1
          title: "Añadir dependencias OpenCV y pytesseract"
          command: |
            echo "opencv-python-headless\npytesseract" >> services/api/requirements.txt
        - id: 3.2
          title: "Instalar paquetes del sistema en Dockerfile"
          command: |
            sed -i '/COPY app/a RUN apt-get update && apt-get install -y tesseract-ocr tesseract-ocr-eng tesseract-ocr-spa' \
            services/api/Dockerfile
        - id: 3.3
          title: "Crear módulo omr_ocr.py con funciones grade_scan() y extract_fields()"
          deliverable: "services/api/app/omr_ocr.py"
        - id: 3.4
          title: "Actualizar endpoint /api/scans para usar omr_ocr.grade_scan"
          deliverable: "services/api/app/main.py (modificado)"
        - id: 3.5
          title: "Agregar validación CURP regex"
          regex: "^[A-Z]{4}\\d{6}[HM][A-Z]{5}\\d{2}$"

    - name: 4_actualizar_frontend
      description: "Eliminar llamadas a servicios separados y simplificar env vars"
      tasks:
        - id: 4.1
          title: "Ajustar VITE_API_BASE a 'http://localhost:8080/api'"
        - id: 4.2
          title: "Eliminar manejo de progreso OMR/OCR separados"
        - id: 4.3
          title: "Mantener tabla editable (nombre, CURP, score)"

    - name: 5_migracion_bd
      description: "Agregar columnas name y curp"
      tasks:
        - id: 5.1
          title: "Generar Alembic revision"
          command: "docker compose run api alembic revision --autogenerate -m 'add name and curp'"
        - id: 5.2
          title: "Ejecutar upgrade"
          command: "docker compose run api alembic upgrade head"

    - name: 6_pruebas_y_kpis
      description: "Medir de nuevo performance y exactitud OCR"
      tasks:
        - id: 6.1
          title: "Benchmark 30 scans"
          command: "python tools/benchmark.py data/demo"
          kpi_target:
            latency_95p: "<= 60s"
            cpu_usage: "<= 70%"
            ocr_error_rate: "<= 10%"
        - id: 6.2
          title: "Generar reporte comparativo"
          deliverable: "perf_after_migration.txt"

    - name: 7_documentacion
      description: "Actualizar README y architecture.md"
      tasks:
        - id: 7.1
          title: "Modificar README.md (Lean Compose)"
        - id: 7.2
          title: "Actualizar diagrams en architecture.md"
