Proyecto BubbleGrade
====================

Explicación del proyecto:
- BubbleGrade es un sistema de procesamiento híbrido OCR + OMR basado en microservicios, diseñado para la evaluación automatizada de documentos académicos.
- Arquitectura compuesta por:
  - Frontend React 18 + Vite + TypeScript (puerto 5173).
  - Orquestador FastAPI + SQLAlchemy (puerto 8080).
  - Servicio OMR en Go (puerto 8090).
  - Servicio OCR en Node.js (puerto 8100).
  - PostgreSQL y Redis.
- Flujo de procesamiento: detección de regiones, ejecución paralela de OMR y OCR, revisión manual basada en confianza, exportación de resultados.

Ejecución:
- Requiere Docker y Docker Compose (v1) o plugin (`docker compose`).
- Al ejecutar `./deploy_bubblegrade.sh`, falla por falta de `docker-compose`; el entorno dispone de `docker compose`.
- Dependencias externas en scripts de prueba: `jq`, `convert` (ImageMagick) y `http` (HTTPie).

Puntos fuertes:
- Documentación exhaustiva en README con características, arquitectura, guías de despliegue y roadmap.
- Estructura modular de microservicios y enfoque Docker-first.
- Scripts automatizados de despliegue (`deploy_bubblegrade.sh`) y testing (`test_bubblegrade.sh`).
- Uso de tecnologías modernas y buenas prácticas (OpenCV, Tesseract.js, WebSockets, Sphinx, Vite).
- Diseño y diagramas claros.

Puntos de mejora:
- Adaptar scripts de despliegue y pruebas a `docker compose` o documentar instalación de `docker-compose`.
- Unificar rutas y versionado de la API: el código expone endpoints en `/api/scans` pero los scripts y README usan `/api/v1`.
- Corregir referencias a archivos inexistentes en README (`docker-compose.dev.yml`, `docs/api-v2.md`, `architecture-enhanced.md`, `deployment-guide.md`).
- Proporcionar un ejemplo de archivo de entorno (`.env.example`) para desarrollo local sin Docker.
- Completar guía de desarrollo con pasos de instalación de dependencias (`pip install -r requirements.txt`, `npm install`).
- Añadir comprobación de herramientas externas antes de usarlas en scripts de prueba.
- Modularizar documentación para evitar duplicación entre README y Sphinx.